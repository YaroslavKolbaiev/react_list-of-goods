{"version":3,"sources":["App.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goodsFromServer","this","props","map","good","React","PureComponent","App","state","isStarted","isReversed","sortType","NONE","minLength","start","setState","reverse","sortAlpabet","ALPABET","sortByLength","LENGTH","reset","visibleGoods","filter","length","sort","good1","good2","localeCompare","className","classNames","type","onClick","value","defaultValue","onChange","event","target","disabled","id","number","item","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.693f1630.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alpabet',\n  LENGTH = 'length',\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    minLength: 0,\n  };\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlpabet = () => {\n    this.setState({ sortType: SortType.ALPABET, isReversed: false });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH, isReversed: false });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const {\n      isStarted, isReversed, sortType, minLength,\n    } = this.state;\n\n    const visibleGoods = goodsFromServer.filter(\n      good => good.length >= minLength,\n    );\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1[SortType.LENGTH] - good2[SortType.LENGTH];\n        default:\n          return 0;\n      }\n    });\n\n    const ten = [\n      { id: 'one', number: 1 },\n      { id: 'two', number: 2 },\n      { id: 'three', number: 3 },\n      { id: 'four', number: 4 },\n      { id: 'fmive', number: 5 },\n      { id: 'six', number: 6 },\n      { id: 'seven', number: 7 },\n      { id: 'eight', number: 8 },\n      { id: 'nine', number: 9 },\n      { id: 'ten', number: 10 },\n    ];\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <button\n          className={classNames('button',\n            { 'button--hidden': isStarted })}\n          type=\"button\"\n          onClick={this.start}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortAlpabet}\n          className={classNames('button',\n            { 'button--hidden': !isStarted })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n          className={classNames('button',\n            { 'button--hidden': !isStarted })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reverse}\n          className={classNames('button',\n            { 'button--hidden': !isStarted })}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reset}\n          className={classNames('button',\n            { 'button--hidden': !isStarted })}\n        >\n          Reset\n        </button>\n\n        <select\n          value={minLength}\n          defaultValue={1}\n          onChange={(event) => {\n            this.setState({ minLength: +event.target.value });\n          }}\n          className={classNames('button',\n            { 'button--hidden': !isStarted })}\n        >\n          <option value=\"0\" disabled>Chose minimum length</option>\n          {ten.map(item => (\n            <option\n              key={item.id}\n              value={item.number}\n            >\n              {item.number}\n            </option>\n          ))}\n        </select>\n\n        {isStarted\n          ? (<GoodsList goodsFromServer={visibleGoods} />)\n          : ''}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goodsFromServer: string[]\n};\n\nexport class GoodsList\n  extends React.PureComponent<Props> {\n  render() {\n    const { goodsFromServer } = this.props;\n\n    return (\n      <ul>\n        {\n          goodsFromServer.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}