{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsFromServer","this","props","map","good","React","PureComponent","App","state","isStarted","isReversed","sortType","start","setState","reverse","sortAlpabet","sortByLength","reset","goodsClone","sort","good1","good2","localeCompare","className","classNames","type","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAMaA,EAAb,4JAEE,WACE,IAAQC,EAAoBC,KAAKC,MAAzBF,gBAER,OACE,6BAEIA,EAAgBG,KAAI,SAAAC,GAAI,OACtB,6BACGA,GADMA,YATrB,GACUC,IAAMC,eCFVN,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WASWO,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAU,QAJd,EAOEC,MAAQ,WACN,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eATxB,EAaEK,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAfzB,EAmBEK,YAAc,WACZ,EAAKF,SAAS,CAAEF,SAAU,UAAWD,YAAY,KApBrD,EAuBEM,aAAe,WACb,EAAKH,SAAS,CAAEF,SAAU,SAAUD,YAAY,KAxBpD,EA2BEO,MAAQ,WACN,EAAKJ,SAAS,CAAEF,SAAU,OAAQD,YAAY,KA5BlD,4CA+BE,WACE,MAA4CT,KAAKO,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBO,EAAU,UAAOlB,GAiBvB,OAfAkB,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQV,GACN,IAAK,UACH,OAAOS,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMT,GAAYU,EAAMV,GACjC,QACE,OAAO,MAITD,GACFQ,EAAWJ,UAIX,sBAAKS,UAAU,MAAf,UACE,wBACEA,UAAWC,IAAW,cACpB,CAAE,sBAAuBf,IAC3BgB,KAAK,SACLC,QAASzB,KAAKW,MAJhB,mBASA,wBACEa,KAAK,SACLC,QAASzB,KAAKc,YAFhB,iCAOA,wBACEU,KAAK,SACLC,QAASzB,KAAKe,aAFhB,4BAOA,wBACES,KAAK,SACLC,QAASzB,KAAKa,QAFhB,qBAOA,wBAAQW,KAAK,SAASC,QAASzB,KAAKgB,MAApC,mBAICR,EACI,cAAC,EAAD,CAAWT,gBAAiBkB,IAC7B,UAzFZ,GAAyBb,IAAMsB,WCrB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7f4619b.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsFromServer: string[]\n};\n\nexport class GoodsList\n  extends React.PureComponent<Props> {\n  render() {\n    const { goodsFromServer } = this.props;\n\n    return (\n      <ul>\n        {\n          goodsFromServer.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: 'none',\n  };\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlpabet = () => {\n    this.setState({ sortType: 'alpabet', isReversed: false });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: 'length', isReversed: false });\n  };\n\n  reset = () => {\n    this.setState({ sortType: 'none', isReversed: false });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const goodsClone = [...goodsFromServer];\n\n    goodsClone.sort((good1, good2) => {\n      switch (sortType) {\n        case 'alpabet':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1[sortType] - good2[sortType];\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsClone.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <button\n          className={classNames('startButton',\n            { 'startButton--hidden': isStarted })}\n          type=\"button\"\n          onClick={this.start}\n        >\n          Start\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortAlpabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n\n        <button type=\"button\" onClick={this.reset}>\n          Reset\n        </button>\n\n        {isStarted\n          ? (<GoodsList goodsFromServer={goodsClone} />)\n          : ''}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}